// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`child_of_owned_object_records 1`] = `
Array [
  Object {
    "deparse": "SELECT p.owned_table_key = ANY( rls_schema.group_fn() ) FROM object_schema.object_table AS c INNER JOIN owned_schema.owned_table AS p ON p.owned_table_ref_key = c.object_table_owned_key WHERE c.object_table_ref_key = this_object_key",
  },
]
`;

exports[`child_of_owned_object_records_with_ownership 1`] = `
Array [
  Object {
    "deparse": "SELECT p.owned_table_key = ANY( rls_schema.group_fn() ) FROM object_schema.object_table AS c INNER JOIN owned_schema.owned_table AS p ON p.owned_table_ref_key = c.object_table_owned_key AND p.owned_table_ref_key = this_owned_key WHERE c.object_table_ref_key = this_object_key",
  },
]
`;

exports[`deparse 1`] = `"CREATE POLICY authenticated_can_delete_on_user_secrets ON dashboard_private.user_secrets FOR DELETE TO authenticated USING ( user_id = dashboard_public.get_current_user_id() );"`;

exports[`drop_policy 1`] = `
Array [
  Object {
    "deparse": "DROP POLICY v_policy_name ON v_schema_name.v_table_name;",
  },
]
`;

exports[`multi_owners 1`] = `
Array [
  Object {
    "deparse": "requester_id = rls_schema.role_fn() OR responder_id = rls_schema.role_fn() OR verifier_id = rls_schema.role_fn()",
  },
]
`;

exports[`open 1`] = `
Array [
  Object {
    "deparse": "TRUE",
  },
]
`;

exports[`own_records 1`] = `
Array [
  Object {
    "deparse": "role_key = rls_schema.role_fn()",
  },
]
`;

exports[`owned_object_records 1`] = `
Array [
  Object {
    "deparse": "SELECT p.owned_table_key = ANY( rls_schema.group_fn() ) FROM owned_schema.owned_table AS p WHERE p.owned_table_ref_key = this_object_key",
  },
]
`;

exports[`owned_records 1`] = `
Array [
  Object {
    "deparse": "role_key = rls_schema.role_fn() OR role_key = ANY( rls_schema.group_fn() )",
  },
]
`;

exports[`permission_name 1`] = `
Array [
  Object {
    "deparse": "SELECT p.permission_role_key = ANY( rls_schema.group_fn() ) FROM permission_schema.permission_table AS p WHERE p.permission_name_key = 'this_value'",
  },
]
`;

exports[`policy deparse 1`] = `
Array [
  Object {
    "deparse": "CREATE POLICY mypolicy ON schemanamed.mytable FOR INSERT TO authenticated USING ( responder_id = dbe.get_uid(c, b) OR requester_id = dbe.get_other_uid(c, b) );",
  },
]
`;

exports[`policyStmt 1`] = `
Array [
  Object {
    "deparse": "CREATE POLICY delete_the_thing ON users.\\"user\\" FOR DELETE TO PUBLIC USING ( (SELECT p.owned_table_key = ANY( current_role_fn_schema.current_role_ids_function() ) FROM object_schema.object_table AS c INNER JOIN owned_schema.owned_table AS p ON p.owned_table_ref_key = c.object_table_owned_key AND p.owned_table_ref_key = this_owned_key WHERE c.object_table_ref_key = this_object_key) );",
  },
]
`;
