// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a_array_expr 1`] = `"ARRAY[namesplaceholder1, namesplaceholder2]"`;

exports[`a_const 1`] = `"'aconst'"`;

exports[`a_const int 1`] = `"2"`;

exports[`a_const str 1`] = `"'astring'"`;

exports[`a_expr 0-4 1`] = `"(<lexpr placeholder> = <rexpr placeholder>)"`;

exports[`a_expr 0-4 2`] = `"<lexpr placeholder> = ANY( <rexpr placeholder> )"`;

exports[`a_expr 0-4 3`] = `"<lexpr placeholder> = ALL( <rexpr placeholder> )"`;

exports[`a_expr 0-4 4`] = `"<lexpr placeholder> IS DISTINCT FROM <rexpr placeholder>"`;

exports[`a_expr 0-4 5`] = `"NULLIF(<lexpr placeholder>, <rexpr placeholder>)"`;

exports[`a_expr 0-4 name 1`] = `"(<lexpr placeholder> OPERATOR(\\"<name1 placeholder>\\".<name2 placeholder>) <rexpr placeholder>)"`;

exports[`a_expr 0-4 name 2`] = `"<lexpr placeholder> <name1 placeholder> ANY( <rexpr placeholder> )"`;

exports[`a_expr 0-4 name 3`] = `"<lexpr placeholder> <name1 placeholder> ALL( <rexpr placeholder> )"`;

exports[`a_expr 0-4 name 4`] = `"<lexpr placeholder> IS DISTINCT FROM <rexpr placeholder>"`;

exports[`a_expr 0-4 name 5`] = `"NULLIF(<lexpr placeholder>, <rexpr placeholder>)"`;

exports[`a_expr 1`] = `"(a = b)"`;

exports[`a_expr 2`] = `"(<lexpr placeholder> = <rexpr placeholder>)"`;

exports[`a_expr 5  1`] = `"<lexpr placeholder> IS OF ( <rexpr placeholder> )"`;

exports[`a_expr 6-7  1`] = `"<lexpr placeholder> IN ( <rexpr placeholder> )"`;

exports[`a_expr 6-7  2`] = `"<lexpr placeholder> IN ( <rexpr placeholder> )"`;

exports[`a_expr 8-9 1`] = `"<lexpr placeholder> LIKE ( <rexpr placeholder> )"`;

exports[`a_expr 8-9 2`] = `"<lexpr placeholder> ILIKE ( <rexpr placeholder> )"`;

exports[`a_expr 10 1`] = `"<lexpr placeholder> SIMILAR TO arg1 ESCAPE arg2"`;

exports[`a_expr 11-12 1`] = `"<lexpr placeholder> BETWEEN arg1 AND arg2"`;

exports[`a_expr 11-12 2`] = `"<lexpr placeholder> NOT BETWEEN arg1 AND arg2"`;

exports[`alias 1`] = `"AS myrule (namesplaceholder)"`;

exports[`alias 2`] = `"AS myrule"`;

exports[`func_call 1`] = `"dan ()"`;

exports[`raw_stmt 1`] = `"NULL::text[]"`;

exports[`rule_stmt 1`] = `"CREATE RULE \\"my-rule\\" AS ON INSERT TO <relation placeholder> WHERE <whereClause placeholder> DO <actions placeholder>"`;

exports[`type_cast 1`] = `"NULL::text[]"`;

exports[`type_name 1`] = `"text"`;
