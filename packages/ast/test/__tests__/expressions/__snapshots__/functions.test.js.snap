// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`create_function 1`] = `
Object {
  "RawStmt": Object {
    "stmt": Object {
      "CreateFunctionStmt": Object {
        "funcname": Array [
          Object {
            "String": Object {
              "str": "schema",
            },
          },
          Object {
            "String": Object {
              "str": "name",
            },
          },
        ],
        "options": Array [
          Object {
            "DefElem": Object {
              "arg": Array [
                Object {
                  "String": Object {
                    "str": "code here",
                  },
                },
              ],
              "defname": "as",
            },
          },
          Object {
            "DefElem": Object {
              "arg": Object {
                "String": Object {
                  "str": "plpgsql",
                },
              },
              "defname": "language",
            },
          },
          Object {
            "DefElem": Object {
              "arg": Object {
                "String": Object {
                  "str": "volatile",
                },
              },
              "defname": "volatility",
            },
          },
          Object {
            "DefElem": Object {
              "arg": Object {
                "Integer": Object {
                  "ival": 1,
                },
              },
              "defname": "security",
            },
          },
        ],
        "parameters": Array [
          Object {
            "FunctionParameter": Object {
              "argType": Object {
                "TypeName": Object {
                  "names": Array [
                    Object {
                      "String": Object {
                        "str": "text",
                      },
                    },
                  ],
                },
              },
              "mode": "FUNC_PARAM_IN",
              "name": "param1",
            },
          },
          Object {
            "FunctionParameter": Object {
              "argType": Object {
                "TypeName": Object {
                  "arrayBounds": Array [
                    Object {
                      "Integer": Object {
                        "ival": -1,
                      },
                    },
                  ],
                  "names": Array [
                    Object {
                      "String": Object {
                        "str": "text",
                      },
                    },
                  ],
                },
              },
              "mode": "FUNC_PARAM_IN",
              "name": "param2",
            },
          },
        ],
        "returnType": Object {
          "TypeName": Object {
            "names": Array [
              Object {
                "String": Object {
                  "str": "text",
                },
              },
            ],
          },
        },
      },
    },
    "stmt_len": 1,
  },
}
`;

exports[`create_function deparse 1`] = `
"CREATE FUNCTION schema.name ( param1 text, active bool, sid uuid DEFAULT uuid_generate_v4(), description text DEFAULT NULL, tags text[] DEFAULT NULL ) RETURNS text AS $LQLCODEZ$ 
 code here 
 $LQLCODEZ$ LANGUAGE plpgsql VOLATILE SECURITY DEFINER;"
`;

exports[`create_function_stmt 1`] = `"CREATE FUNCTION schemer.funker ( param0 text, param1 text, param2 text[] DEFAULT NULL, param3 text[] DEFAULT NULL ) RETURNS text VOLATILE LANGUAGE plpgsql SECURITY DEFINER"`;

exports[`create_function_stmt ast 1`] = `
Object {
  "CreateFunctionStmt": Object {
    "funcname": Array [
      Object {
        "String": Object {
          "str": "schemer",
        },
      },
      Object {
        "String": Object {
          "str": "funker",
        },
      },
    ],
    "options": Array [
      Object {
        "DefElem": Object {
          "arg": Object {
            "String": Object {
              "str": "volatile",
            },
          },
          "defname": "volatility",
        },
      },
      Object {
        "DefElem": Object {
          "arg": Object {
            "String": Object {
              "str": "plpgsql",
            },
          },
          "defname": "language",
        },
      },
      Object {
        "DefElem": Object {
          "arg": Object {
            "Integer": Object {
              "ival": 1,
            },
          },
          "defname": "security",
        },
      },
    ],
    "parameters": Array [
      Object {
        "FunctionParameter": Object {
          "argType": Object {
            "TypeName": Object {
              "names": Array [
                Object {
                  "String": Object {
                    "str": "text",
                  },
                },
              ],
            },
          },
          "mode": "FUNC_PARAM_IN",
          "name": "param1",
        },
      },
      Object {
        "FunctionParameter": Object {
          "argType": Object {
            "TypeName": Object {
              "arrayBounds": Array [
                Object {
                  "Integer": Object {
                    "ival": -1,
                  },
                },
              ],
              "names": Array [
                Object {
                  "String": Object {
                    "str": "text",
                  },
                },
              ],
            },
          },
          "mode": "FUNC_PARAM_IN",
          "name": "param2",
        },
      },
    ],
    "returnType": Object {
      "TypeName": Object {
        "names": Array [
          Object {
            "String": Object {
              "str": "text",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`create_trigger deparse 1`] = `
"CREATE FUNCTION schema.name ( param1 text, active bool, sid uuid DEFAULT uuid_generate_v4(), description text DEFAULT NULL, tags text[] DEFAULT NULL ) RETURNS TRIGGER AS $LQLCODEZ$ 
 code here 
 $LQLCODEZ$ LANGUAGE plpgsql VOLATILE;"
`;

exports[`createfunction stmt from json 1`] = `
"CREATE FUNCTION \\"collections-private\\".\\"deparse_a-const\\" ( \\"node-a\\" jsonb, context text DEFAULT NULL ) RETURNS text AS $LQLCODEZ$ 
 some string 
 $LQLCODEZ$ LANGUAGE plpgsql SECURITY DEFINER VOLATILE"
`;

exports[`drop deparse 1`] = `"DROP FUNCTION schema.name;"`;
